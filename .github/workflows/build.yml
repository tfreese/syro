# https://docs.github.com/en/actions/use-cases-and-examples/building-and-testing/building-and-testing-java-with-gradle
# https://gradlehero.com/build-gradle-projects-with-github-actions/
# https://github.com/tkgregory/gradle-github-actions-example
# https://docs.github.com/de/actions/writing-workflows/choosing-what-your-workflow-does/storing-and-sharing-data-from-a-workflow
#

name: Java CI with Gradle
run-name: ${{ github.actor }} is testing out GitHub Actions

on:
    # Manual Trigger
    workflow_dispatch:
    # Push Trigger
    push:
        branches: [ "master" ]
    pull_request:
        branches: [ "master" ]

jobs:
    print-infos:
        name: Printing some Information's
        runs-on: ubuntu-latest
        # runs-on: [ linux, x64 ]

        steps:
            -   run: echo "The job was automatically triggered by a ${{ github.event_name }} event."
            -   run: echo "This job is now running on a ${{ runner.os }} server hosted by GitHub!"
            -   run: echo "The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."
    
    build:
        name: Build the Project
        needs: print-infos
        strategy:
            fail-fast: false
            matrix:
                os: [ ubuntu-latest , windows-latest, macos-latest ]
                include:
                    -   os: ubuntu-latest
                        gradle: ./gradlew
                    -   os: windows-latest
                        gradle: gradlew.bat
                    -   os: macos-latest
                        gradle: ./gradlew
        runs-on: ${{ matrix.os }}
        #runs-on: ubuntu-latest
        #        runs-on: [ linux, x64 ]
        #        runs-on: ${{ matrix.os }}

        steps:
            -   name: Checkout
                uses: actions/checkout@v4

            -   run: echo "The ${{ github.repository }} repository has been cloned to the runner."
            -   run: echo "This job is now running on a ${{ runner.os }} server hosted by GitHub!"
            -   run: echo "This job's status is ${{ job.status }}."

            -   name: List files in the repository
                if: runner.os != 'Windows'
                run: |
                    ls -hal ${{ github.workspace }}

            -   name: Setup Java
                uses: actions/setup-java@v4
                with:
                    java-version: 23
                    distribution: "oracle"
                    architecture: x64
                    cache: "gradle" # Preserve ~/.gradle Cache over Jobs.

            # Preserve ~/.gradle Cache over Jobs.
            #            -   name: Setup Gradle
            #                uses: gradle/actions/setup-gradle@v4
            #                with:
            #                    gradle-version: “8.12“

            -   name: Validate Gradle Wrapper
                uses: gradle/actions/wrapper-validation@v3

            -   name: Make Wrapper executable
                #if: runner.os != 'Windows'
                shell: bash
                #run: chmod 755 gradlew
                run: |
                    if [ "${{ runner.os }}" = "Windows" ]; then
                       echo "Not necessary on Windows."
                    else
                        chmod 755 gradlew
                    fi

            -   name: Build with Gradle
                #                run: ./gradlew build
                run: ${{ matrix.gradle }} build

            -   name: Publish Libs
                uses: actions/upload-artifact@v4
                with:
                    name: dependencies_${{ runner.os }}
                    path: build/libs/*
                    if-no-files-found: warn
                    retention-days: 30

            -   name: Publish Test Reports
                uses: actions/upload-artifact@v4
                with:
                    name: reports-test_${{ runner.os }}
                    path: build/test-results/**/*.xml
                    if-no-files-found: warn
                    retention-days: 30

            -   name: Publish Reports
                uses: actions/upload-artifact@v4
                with:
                    name: reports_${{ runner.os }}
                    path: build/reports/**/*
                    if-no-files-found: warn
                    retention-days: 30

#            -   name: Get Reports
#                uses: actions/download-artifact@v4
#                with:
#                    name: reports_Linux
