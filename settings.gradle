// Can not be configured by Conventions-Plugin.
pluginManagement {
    repositories {
        mavenLocal()
        mavenCentral()
        gradlePluginPortal()
    }

    // System.setProperty("javax.net.ssl.trustStore", "${rootDir}/truststore.jks")
    // System.setProperty("javax.net.ssl.trustStorePassword", "")
}

// Without rootProject.name the Name of the Projekt-Directory is used.
//rootProject.name = "syro"

dependencyResolutionManagement {
    repositoriesMode.set(RepositoriesMode.FAIL_ON_PROJECT_REPOS)
//
//     // A Single-Project can have the Repositories in build.gradle.
    repositories {
        mavenLocal()
        mavenCentral()
//         maven {
//             url = uri("https://repository.primefaces.org")
//             name = "primefaces"
//             content {
//                 excludeGroupByRegex("de.freese\\..*")
//             }
//             mavenContent {
//                 releasesOnly()
//                 //snapshotsOnly()
//             }
//             metadataSources {
//                 artifact()
//                 mavenPom()
//             }
//         }
//         maven {
//             url = uri("https://repo.gradle.org/gradle/libs-releases")
//             name = "gradleLibsReleases"
//             content {
//                 excludeGroupByRegex("de.freese\\..*")
//             }
//             mavenContent {
//                 releasesOnly()
//                 //snapshotsOnly()
//             }
//         }
//
//         flatDir {
//             dirs("libs", "ohj")
//             //dirs("libs", "${rootProject.projectDir}/ohj")
//         }
//         // implementation(":help-share:12.1.3.0.0")
//         // implementation(files("libs/a.jar", "libs/b.jar"))
//         // implementation(fileTree(dir: "ohj", include: "*-12.1.3.0.0.jar"))
//
//         ivy {
//             url = uri("<URL>")
//             name = "ivy"
//             patternLayout {
//                 // ivy pattern supports transitive dependencies.
//                 // ivy "app1/[organisation]/ivys/[artifact]-[revision].xml"
//                 // ivy "app2/[organisation]/ivys/[artifact]-[revision].xml"
//                 artifact "app1/[organisation]/jars/[artifact]-[revision].[ext]"
//                 artifact "app2/[organisation]/jars/[artifact]-[revision].[ext]"
//             }
//             metadataSources {
//                 artifact() // Only look for Jar.
//             }
//             content {
//                 excludeGroup "org.orga"
//                 excludeGroupByRegex("com\\..*")
//                 excludeGroupByRegex "io\\..*"
//                 excludeGroupByRegex "jakarta\\..*"
//                 excludeGroupByRegex "org\\..*"
//             }
//         }
//
//         // Ivy Dependencies.
//         implementation("organisation:artifact:revision") // app1/organisation/jars/artifact-revision.jar
    }
}

// include "syro-core"

// https://docs.gradle.org/8.8/userguide/directory_layout.html
// GRADLE_HOME/init.d/cache-settings.gradle
// GRADLE_USER_HOME/init.gradle
// beforeSettings { settings ->
//     settings.caches {
//         //cleanup = Cleanup.ALWAYS  // Cleanup is performed at the end of each build session.
//         cleanup = Cleanup.DEFAULT // Cleanup is performed periodically in the background (currently once every 24 hours).
//         //cleanup = Cleanup.DISABLED
//
//         releasedWrappers.removeUnusedEntriesAfterDays = 45
//         snapshotWrappers.removeUnusedEntriesAfterDays = 10
//         downloadedResources.removeUnusedEntriesAfterDays = 45
//         createdResources.removeUnusedEntriesAfterDays = 10
//         buildCache.removeUnusedEntriesAfterDays = 5 // >= 8.8
//
//         // if (GradleVersion.current().equals(GradleVersion.version("8.9"))) {
//         //     buildCache.removeUnusedEntriesAfterDays = 5
//         // }
//     }
// }

println("")
println("Gradle version: ${GradleVersion.current().version}")
println("Java version: ${JavaVersion.current()}")
println("MaxWorkerCount: ${gradle.getStartParameter().getMaxWorkerCount()}")
println("")

// buildCache {
//     boolean isCi = System.getenv().containsKey("bamboo_buildNumber")
//
//     local {
//         enabled = !isCi
//         // directory = new File(rootDir, "build-cache")
//     }
//
//     remote(DirectoryBuildCache) {
//         enabled = !isCi
//         directory = "/tmp/build-cache"
//         push = true
//     }
//
//     // remote(HttpBuildCache) {
//     //     enabled = isCi
//     //     url = https://HOST:PORT/cache/
//     //     credentials {
//     //         username = "build-cache-user-name"
//     //         password = "build-cache-password"
//     //     }
//     //     push = true
//     //     allowUntrustedServer = true
//     //     allowInsecureProtocol = true
//     // }
// }
